{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"4MAKaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAmBO,OAC5CN,EAAc,MAMlB,SACI,uBACIO,KAAM,OACNC,MAAUT,EACVU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,QAmBfG,YAAc,8B,8BC7BjBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDAE2BC,UAAUH,GAFrC,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAEhC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAON,IACxB,4BAAKA,QCHJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KA0BxC,OAnBAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GAAI,OAENC,YAAW,WACPJ,EACA,CACIf,KAAMkB,EACNL,SAAQ,MAGb,UAIZ,CAACpB,IAGGqB,EDtBiBM,CAAa3B,GAA9BO,EAH8B,EAG9BA,KAAMa,EAHwB,EAGxBA,QAEb,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAEjDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAGQT,EAAKE,KAAK,SAAAC,GAAG,OAET,wBAAC,EAAD,2BACQA,GADR,IAEIkB,IAAOlB,EAAIC,eElB1BkB,EAAe,WAAO,IAAD,EAEM5C,mBAAS,CAAC,uBAFhB,mBAEvBQ,EAFuB,KAEXT,EAFW,KAS9B,OACI,qCACE,8CACA,uBAEA,cAAC,EAAD,CAAaA,cAAiBA,IAE9B,6BAEMS,EAAWgB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CACIA,SAAWA,GACLA,YClB9B8B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.a2c2557b.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\n\n\n\nexport const AddCategory = ( {setCategories} ) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if( inputValue.trim().length > 2){\n            setCategories( categories => [inputValue,...categories]); //Llamando con el callback tenemos acceso al state\n            setInputValue('');\n        }\n\n    }\n\n    return (\n        <form onSubmit = { handleSubmit }>\n            <input \n                type =\"text\"\n                value = { inputValue }\n                onChange = { handleInputChange }\n                placeholder = \"Digite la categorÃ­a\"\n            />\n        </form>\n    )\n\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","export const getGifs = async (category) => {\n    const url =\n        `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=fOOmc5bDPscDD5TfPaiawBKuxyQ9S1Dv`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    const gifs = data.map((img) => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url,\n        };\n    });\n  \n    return gifs;\n};","import React from 'react'\n\nexport const GifGridItem = ( {title,url} ) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={ url } alt= { title }/>\n            <p>{ title }</p>\n        </div>\n    )\n}\n","import React from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport { GifGridItem } from \"./GifGridItem\";\n\nexport const GifGrid = ({ category }) => {\n\n\n    const {data, loading} = useFetchGifs(category);\n    \n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            \n            { loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n\n            <div className=\"card-grid\">\n\n                {\n                    data.map( img => (\n\n                        <GifGridItem \n                            {...img}\n                            key = {img.id}\n                        />\n\n                    ))\n                }\n            </div>\n        </>\n    );\n};\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from '../helpers/getGifs'\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        \n        getGifs(category)\n            .then(imgs => \n                \n                setTimeout(() => {\n                    setState(\n                    {\n                        data: imgs,\n                        loading:false\n                    })\n                    \n                }, 1000)\n                \n                \n            )\n    }, [category]);\n\n\n    return state;\n}","import React,{useState} from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['Shingeki no Kyojin']);\n\n    // const handleAdd = () => {\n    //     setCategories([...categories,'Dragon Ball Z']);\n    //     setCategories( cat => [...cat,'Dragon Ball']);\n    // }\n\n    return (\n        <>\n          <h2>GifExpertApp</h2>\n          <hr/>  \n\n          <AddCategory setCategories= { setCategories } />\n\n          <ol>\n              { \n                categories.map( category => (\n                    <GifGrid \n                        category={ category } \n                        key={ category } \n                    />\n                )) \n              } \n          </ol>\n\n        </>\n    )\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { GifExpertApp } from './GifExpertApp';\n\n\nReactDOM.render(\n \n    <GifExpertApp />,\n \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}